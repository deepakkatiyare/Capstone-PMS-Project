server.port=9001
spring.application.name=api-gateway-service

#spring.config.import=optional:configserver:http://localhost:9000
#spring.cloud.config.uri=http://localhost:9000
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.instanceId=${spring.application.name}:${server.port}
spring.cloud.consul.discovery.healthCheckInterval=12s
spring.cloud.consul.config.enabled=false

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.default-filters[1]=AddResponseHeader=Access-Control-Allow-Origin, *

spring.cloud.gateway.routes[0].id=allergy_service_route
spring.cloud.gateway.routes[0].uri=lb://G1-allergy-service/
spring.cloud.gateway.routes[0].predicates[0]=Path=/allergy-service/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/allergy-service/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[0].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.name=allergyServiceCircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/G1-allergy-service-fallback

spring.cloud.gateway.routes[1].id=health_record_service_route
spring.cloud.gateway.routes[1].uri=lb://G1-health-record-service/
spring.cloud.gateway.routes[1].predicates[0]=Path=/health-record/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/health-record/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=healthRecordServiceCircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/gd-health-record-service-fallback

spring.cloud.gateway.routes[2].id=physician_availability_service_route
spring.cloud.gateway.routes[2].uri=lb://G1-physician-availability-service/
spring.cloud.gateway.routes[2].predicates[0]=Path=/physician-availability/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/physician-availability/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[2].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.name=PhysicianAvailabilityServiceCircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/G1-Physician-Availability-service-fallback

spring.cloud.gateway.routes[3].id=physician_info_route
spring.cloud.gateway.routes[3].uri=lb://G1-physician-info/
spring.cloud.gateway.routes[3].predicates[0]=Path=/physician-info/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/physician-info/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[3].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[1].args.name=PhysicianInfoCircuitBreaker
spring.cloud.gateway.routes[3].filters[1].args.fallbackUri=forward:/G1-Physician-Info-fallback

spring.cloud.gateway.routes[4].id=authentication_route
spring.cloud.gateway.routes[4].uri=lb://g1-authentication-service/
spring.cloud.gateway.routes[4].predicates[0]=Path=/authentication/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/authentication/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[4].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[4].filters[1].args.name=AuthenticationCircuitBreaker
spring.cloud.gateway.routes[4].filters[1].args.fallbackUri=forward:/G1-Authentication-fallback

spring.cloud.gateway.routes[5].id=appointment_route
spring.cloud.gateway.routes[5].uri=lb://G1-appointment/
spring.cloud.gateway.routes[5].predicates[0]=Path=/appointment/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/appointment/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[5].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[5].filters[1].args.name=AppointmentCircuitBreaker
spring.cloud.gateway.routes[5].filters[1].args.fallbackUri=forward:/G1-Appointment-fallback

spring.devtools.add-properties=false

logging.level.org.hibernate=ERROR
logging.level.com.revature.*=DEBUG
logging.level.org.springframework.cloud.gateway.*=DEBUG

management.endpoint.gateway.enabled=true
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*